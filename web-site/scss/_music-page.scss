@use 'variables' as *;

header {
  position: fixed;
  top: 0;
  z-index: 1;
  width: 100vw;
  background-color: $background-color--header--non-home-page;


main {
  margin: auto;
  width: $width--desktop;

  @media (max-width: $breakpoint--desktop) {
    width: $width--tablet;
  }

  @media (max-width: $breakpoint--tablet) {
    width: $width--mobile;
  }

  @media (max-width: $breakpoint--mobile) {
    width: $width--mobile-small;
    margin-top: ($height--header + $line-height);
  }
}

.composition {
  display: flex;
  flex-wrap: wrap;
  margin: 0 auto 36px;
  width: $width--desktop;

  &-artwork {
    &-thumbnail {
      width: ($grid-unit + $grid-column);
      height: (7 * $line-height);
      line-height: 1;
    }
  }

  &__thumbnail {
    &--container {
      width: ($grid-unit + $grid-column);
      margin-right: $grid-gutter;
    }
  }

  /// Wavesurfer embeds a div with a position of absolute as the parent to the
  /// waveform. In order to ensure that Wavesurferâ€™s waveform scrolls underneath the
  /// header, I need to do the following:
  &__waveform {
    position: relative;
    z-index: 0;

    > div {
      position: relative;
      z-index: 0;
    }

    &--container {
      width: (10 * $grid-unit);
    }

    &--play-pause-button {
      border: 0;
      line-height: $line-height;
      padding: 10px 16px;
    }
  }

  &__metadata {
    &--container {
      margin-top: $line-height;
      text-align: center;
      font-size: 14px;
      width: ($grid-unit + $grid-column);
      margin-right: $grid-gutter;
    }
  }

  &__synopsis {
    &--container {
      margin-top: $line-height;
      width: (10 * $grid-unit);
  }

  }

}

#heat__waveform--play-pause-button {
  background-color: $background-color--track--heat;
  color: $color--reading-text;
  cursor: pointer;
}

#x0x0x0__waveform--play-pause-button {
  background-color: $background-color--track--x0x0x0;
  color: $background-color--header--non-home-page;
  cursor: pointer;
}

.current-genre {
  color: $color--reading-text;
  border-bottom: 2px solid $color--reading-text;
}

/// As in key-value pairs. For example,
// <span class="key">Title</span>: <span class="value">x0x0x0</span>
.key {
  font-weight: bold;
}
